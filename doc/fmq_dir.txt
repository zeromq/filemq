fmq_dir(3)
==========

NAME
----
fmq_dir - work with file-system directories

SYNOPSIS
--------
----
//  Create new directory item
fmq_dir_t *
    fmq_dir_new (const char *path, const char *parent);

//  Destroy a directory item
void
    fmq_dir_destroy (fmq_dir_t **self_p);

//  Return directory path
char *
    fmq_dir_path (fmq_dir_t *self);

//  Return last modified time
time_t
    fmq_dir_time (fmq_dir_t *self);

//  Return total hierarchy size
off_t
    fmq_dir_size (fmq_dir_t *self);

//  Calculate differences between two versions of a directory tree
zlist_t *
    fmq_dir_diff (fmq_dir_t *older, fmq_dir_t *newer, char *alias);

//  Return full contents of directory as a patch list.
zlist_t *
    fmq_dir_resync (fmq_dir_t *self, char *alias);

//  Return total hierarchy count
size_t
    fmq_dir_count (fmq_dir_t *self);

//  Return sorted array of file references
fmq_file_t **
    fmq_dir_flatten (fmq_dir_t *self);

//  Remove directory, optionally including all files
void
    fmq_dir_remove (fmq_dir_t *self, bool force);

//  Print contents of directory
void
    fmq_dir_dump (fmq_dir_t *self, int indent);
    
//  Load directory cache; returns a hash table containing the SHA-1 digests
//  of every file in the tree. The cache is saved between runs in .cache.
//  The caller must destroy the hash table when done with it.
zhash_t *
    fmq_dir_cache (fmq_dir_t *self);

//  Self test of this class
int
    fmq_dir_test (bool verbose);
----

DESCRIPTION
-----------

The fmq_dir class works with directories, reading them from disk and
comparing two directories to see what changed. When there are changes,
returns a list of "patches".


EXAMPLE
-------
.From fmq_dir_test method
----
    fmq_dir_t *older = fmq_dir_new (".", NULL);
    assert (older);
    if (verbose) {
        printf ("\n");
        fmq_dir_dump (older, 0);
    }
    fmq_dir_t *newer = fmq_dir_new ("..", NULL);
    zlist_t *patches = fmq_dir_diff (older, newer, "/");
    assert (patches);
    while (zlist_size (patches)) {
        fmq_patch_t *patch = (fmq_patch_t *) zlist_pop (patches);
        fmq_patch_destroy (&patch);
    }
    zlist_destroy (&patches);
    fmq_dir_destroy (&older);
    fmq_dir_destroy (&newer);

    //  Test directory cache calculation
    fmq_dir_t *here = fmq_dir_new (".", NULL);
    zhash_t *cache = fmq_dir_cache (here);
    fmq_dir_destroy (&here);
    zhash_destroy (&cache);
    
    fmq_dir_t *nosuch = fmq_dir_new ("does-not-exist", NULL);
    assert (nosuch == NULL);
----

SEE ALSO
--------
linkfmq:filemq[1]
